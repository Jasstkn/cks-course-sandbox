---
name: terraform-test

on:
  pull_request:
    paths-ignore:
      - README.md
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    name: test terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: v1.1.9
      - name: Install pre-commit dependencies
        run: |
          pip install pre-commit
          # curl -L "$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E "https://.+?-linux-amd64.tar.gz" | head -n1)" > terraform-docs.tar.gz && tar xf terraform-docs.tar.gz && chmod +x terraform-docs && sudo mv terraform-docs /usr/bin/
          # terraform-docs --version
          curl -L "$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E "https://.+?_linux_amd64.zip")" > tflint.zip && unzip tflint.zip && rm tflint.zip && sudo mv tflint /usr/bin/
          tflint --version
          curl -L "$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E "https://.+?_linux_amd64.tar.gz")" > tfupdate.tar.gz && tar xf tfupdate.tar.gz && rm tfupdate.tar.gz && sudo mv tfupdate /usr/bin/
          tfupdate --version
      - name: Execute pre-commit
        run: |
          pre-commit run --color=always --show-diff-on-failure --all-files || true
